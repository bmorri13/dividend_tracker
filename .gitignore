# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Production builds
/frontend/.next/
/frontend/out/
/frontend/dist/
/backend/dist/
/backend/bin/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next
out

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Go specific
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Go workspace file
go.work
go.work.sum

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp

# Database
*.db
*.sqlite
*.sqlite3

# Cache files
*.cache

# Docker
docker-compose.override.yml

# Backup files
*.bak
*.backup

# Package files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Supabase
.branches
.temp
supabase/.temp

# Frontend specific
/frontend/.turbo
/frontend/.vercel

# Backend specific  
/backend/.air
/backend/tmp/

# API keys and secrets (double check)
**/secrets.json
**/*secret*
**/*key*
**/*token*
**/credentials.json

# Local configuration files
config.local.json
settings.local.json

# MCP configuration (may contain sensitive tokens)
**/.mcp.json
frontend/.mcp.json

# Docker volumes and runtime data
docker-data/
volumes/

# Security and testing files - INTENTIONALLY INCLUDED in public repo
# These files demonstrate security best practices and are safe to share:
# ✅ security_analysis.md - Shows security awareness
# ✅ test_auth.md - Demonstrates testing approach  
# ✅ database_migration.sql - Required for setup
# ✅ verify_migration.sql - Quality assurance tool
# ✅ Makefile - Essential for Docker management
# ✅ All Docker documentation files

# Files that SHOULD be excluded (contain sensitive data):
# ❌ .mcp.json files - May contain API tokens
# ❌ .env files - Contain secrets and API keys

# Development tools
.air.toml
.vscode/settings.json
.fleet/
*.code-workspace

# Hot reload files
**/*.hot-update.*
.turbo/

# Debug files
debug
debug.test
__debug_bin*

# Certificate files (if any)
*.pem
*.crt
*.key
*.p12

# Backup and temporary files
*~
.#*
\#*#
.*.swp
.*.swo

# Docker override files (user-specific)
docker-compose.local.yml
docker-compose.*.local.yml